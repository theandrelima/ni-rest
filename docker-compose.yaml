services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ni-rest:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DJANGO_ENV=development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        ni-rest manage migrate &&
        ni-rest manage collectstatic --noinput &&
        ni-rest start --dev --host 0.0.0.0 --port 8000
      "
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DJANGO_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ni-rest:
        condition: service_started
    command: ["celery", "-A", "ni_rest.core", "worker", "--loglevel=info"]
  
  batfish:
    platform: linux/x86_64
    image: "batfish/batfish:2021.12.13.1143"
    ports:
      - "9996:9996"
      - "9997:9997"
      - "8888:8888"

volumes:
  postgres_data:
  redis_data: